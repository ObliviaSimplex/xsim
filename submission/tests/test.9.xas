# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# Test 9: Palindrome Checker
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

.glob main
.glob puts
.glob strlen
.glob border
main:
        #std
        push    r14
        mov     r15, r14
        loadi   palindrome, r4
        loadi   40, r2
        push    r2
        call    border
        pop     r2
        push    r4
        call    puts
        call    palcheck
        test    r0, r0
        br      yespal1
        loadi   notpal, r6
        jr      printanswer1
yespal1:
        loadi   ispal,  r6
printanswer1:
        push    r6
        call    puts
        pop     r6
        pop     r4
        loadi   notapalindrome, r5
        push    r5
        call    puts
        call    palcheck
        test    r0, r0
        br      yespal2
        loadi   notpal, r6
        jr      printanswer2
yespal2:
        loadi   ispal,  r6
printanswer2:
        push    r6
        call    puts
        pop     r6
        loadi   40, r2
        push    r2
        call    border
        pop     r2
        mov     r14, r15
        pop     r14
        ret

palcheck:
        push    r14
        mov     r15, r14
        push    r1
        push    r2
        push    r3
        push    r4
        push    r5
        push    r6
        push    r7
        push    r8
        push    r9
        xor     r7,  r7          # r6 = 0
        inc     r7               # r7 = 1
        inc     r7
        loadi   4,   r1
        add     r14, r1
        load    r1,  r3
        push    r3
        call    strlen          # length of string at r3 is now in r0
        pop     r3
        mov     r3,  r4          # r4 now points to first char in string
        add     r0,  r3          # r3 now points to last char in string
        dec     r3
        jr      whilepalcheck
dopalcheck:
        mov     r3,  r5
        sub     r4,  r5  
        cmp     r5,  r7          # less than 2 chars left?
        br      yespal
        dec     r3
        inc     r4
whilepalcheck:
        loadb   r3,  r8
        loadb   r4,  r9
        equ     r8,  r9          # are the nth and (len-n) chars equal?     
        br      dopalcheck
        xor     r0,  r0          # default r0 to 0 (not palindrome)
        jr      donepalcheck
yespal:
        inc     r0              # set r0 to 1 if palindrome
donepalcheck:
        pop     r9
        pop     r8
        pop     r7
        pop     r6
        pop     r5
        pop     r4
        pop     r3
        pop     r2
        pop     r1
        mov     r14, r15
        pop     r14
        ret

palindrome:
.literal "\"able was I ere I saw elba\""
notapalindrome:
.literal "\"after seeing elba, I stopped being able\""
notpal:
.literal "is not a palindrome."
ispal:
.literal "is a palindrome"